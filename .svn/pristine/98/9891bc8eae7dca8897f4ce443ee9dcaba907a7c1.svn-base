// accountBook/pages/payerHandle/payerHandle.js
const {
  $Message
} = require('../../../dist1/base/index');
const {
  $request,
} = require('../../../utils/util.js');
import {
  groupByList,
  $convertDate
} from "../../../utils/util.js"
import Notify from '../../../dist/notify/notify';
import Toast from '../../../dist/toast/toast';
import Dialog from '../../../dist/dialog/dialog';
const app = getApp();
Page({

  /**
   * 页面的初始数据
   */
  data: {
    formData: {
      workerId: "",
      workerName: "",
      startDate: "",
      endDate: "",
      workTime: "",
      money: "",
      adMoney: ""
    },
    workerList: {
      isVisiable: false,
      data: []
    },
    money: "",
    type: "",
    currentEndDate: new Date().getTime(),
    currentStartDate: new Date().getTime(),
    isVisiableStartDate: false,
    isVisiableEndDate: false,
    currentRouter: {
      worker_url: app.globalData.serverWorker + "staff/findByOwer",
      moneyById: "http://192.168.3.59:9093/" + "labor/findListBySid",
      add: {
        url: "http://192.168.3.189:9093/" + "Work/addAdvanceFee",
      },
      edit: {
        url: "http://192.168.3.189:9093/" + "Work/addAdvanceFee"
      }
    }
  },
  handleIsVisableStartDate(e) {
    let that = this
    that.setData({
      isVisiableStartDate: !that.data.isVisiableStartDate,
    })
  },
  handleIsVisableEndDate(e) {
    this.setData({
      isVisiableEndDate: !this.data.isVisiableEndDate,
    })
  },
  handleChangeText(e) {
    let key = 'formData'.concat('.', e.currentTarget.dataset.type)
    this.setData({
      [key]: e.currentTarget.dataset.type == "remarks" ? e.detail.value : e.detail
    })
  },
  /**
   * 生命周期函数--监听页面加载
   */
  onLoad: function(options) {
    let that = this
    let currentRouter = that.data.currentRouter
    that.setData({
      type: options.type,
      "formData.endDate": $convertDate(new Date().getTime()),
      "formData.startDate": $convertDate(new Date().getTime())
    })
    if (options.type == "add") {
      Toast.loading({
        mask: true,
        duration: 0,
        message: "加载中"
      })
      wx.setNavigationBarTitle({
        title: '临时工结算新增',
      })
      $request({
        url: currentRouter.worker_url,
        type: "form"
      }).then(res => {
        setTimeout(function() {
          let temp = res.data.data.map(item => {
            item.checked = false
            return item
          })
          that.setData({
            "workerList.data": temp
          })
          Toast.clear();
        }, 600)
      }).catch(error => {
        setTimeout(function() {
          Toast.clear();
        }, 600)
      })
    } else {
      let workerList = $request({
        url: currentRouter.worker_url,
        type: "form"
      })
    }
  },
  handleChangeStartDate(e) {
    let date = $convertDate(e.detail)
    this.setData({
      "formData.startDate": date,
      currentStartDate: e.detail,
      isVisiableStartDate: !this.data.isVisiableStartDate
    })
  },
  handleChangeEndDate(e) {
    let date = $convertDate(e.detail)
    this.setData({
      "formData.endDate": date,
      currentEndDate: e.detail,
      isVisiableEndDate: !this.data.isVisiableEndDate
    })
  },
  handleIsVisableWorker(e) {
    this.setData({
      "workerList.isVisiable": !this.data.workerList.isVisiable
    })
  },
  /**
   * 生命周期函数--监听页面初次渲染完成
   */
  onReady: function() {

  },
  handleSubmit() {
    let that = this
    let type = that.data.type
    let formData = that.data.formData
    let moneyTest = /(^[1-9]([0-9]+)?(\.[0-9]{1,2})?$)|(^(0){1}$)|(^[0-9]\.[0-9]([0-9])?$)/;
    let currentRouter = that.data.currentRouter
    // if (formData.workerName == "" || formData.workerId == "") {
    //   Notify("请选择还款人")
    //   return false
    // } else

    if (!moneyTest.test(formData.money) || !moneyTest.test(formData.adMoney) || !moneyTest.test(formData.workTime)) {
      Notify("累积工时、实发金额、还预支金额格式不符")
      return false
    } else if (formData.startDate == "" || formData.endDate == "") {
      Notify("请选择日期")
      return false

    } else if (that.data.currentStartDate > that.data.currentEndDate) {
      Notify("开始时间不可大于结束时间")
      return false
    }

    let params = type == "add" ? {
      Amount: formData.amount,
      time: formData.date,
      sname: formData.workerName,
      sId: formData.workerId
    } : ""
    Toast.loading({
      mask: true,
      duration: 0,
      message: "加载中..."
    })
    $request({
      url: currentRouter[type],
      params: params,
      type: "form"
    }).then(res => {
      setTimeout(function() {
        Toast.clear()
        setTimeout(function() {
          Toast.success("操作成功")
          setTimeout(function() {
            wx.navigateBack({
              delta: 1
            })
          }, 600)
        }, 600)
      }, 600)
    })
  },
  handleWorkerCheck(e) {
    let workerList = this.data.workerList.data
    let id = e.currentTarget.dataset.id
    let name = e.currentTarget.dataset.name
    let moneyById_Url = this.data.currentRouter.moneyById
    for (var i = 0; i < workerList.length; i++) {
      if (workerList[i].sId == id) {
        workerList[i].checked = !workerList[i].checked
        if (workerList[i].checked == true) {
          $request({
            url: moneyById_Url,
            params:{
              sId: id
            },
            type: "form"
          }).then(res => {
            debugger
          })
          this.setData({
            'formData.workerName': name,
            'formData.workerId': id,
          })
        } else {
          this.setData({
            'formData.workerName': "",
            'formData.workerId': "",
          })
        }
      } else {
        workerList[i].checked = false
      }
    }
    this.setData({
      "workerList.data": workerList
    })
  },
  /**
   * 生命周期函数--监听页面显示
   */
  onShow: function() {

  },

  /**
   * 生命周期函数--监听页面隐藏
   */
  onHide: function() {

  },

  /**
   * 生命周期函数--监听页面卸载
   */
  onUnload: function() {

  },

  /**
   * 页面相关事件处理函数--监听用户下拉动作
   */
  onPullDownRefresh: function() {

  },

  /**
   * 页面上拉触底事件的处理函数
   */
  onReachBottom: function() {

  },

  /**
   * 用户点击右上角分享
   */
  onShareAppMessage: function() {

  }
})